{"ast":null,"code":"var _jsxFileName = \"/Users/neilmackay/Documents/GitHub2021/react_scoreboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"Neil\",\n        score: 0,\n        id: 1\n      }, {\n        name: \"Tiffany\",\n        score: 0,\n        id: 2\n      }, {\n        name: \"Ilona\",\n        score: 0,\n        id: 3\n      }, {\n        name: \"Devon\",\n        score: 0,\n        id: 4\n      }],\n      highscore: 0\n    };\n    this.prevPlayerID = 4;\n\n    this.handleChangeScore = (index, numChange) => {\n      this.setState(prevState => ({\n        score: prevState.players[index].score += numChange\n      }));\n    };\n\n    this.handleAddPlayer = name => {\n      this.setState(prevState => {\n        return {\n          players: [...prevState.players, {\n            name,\n            score: 0,\n            id: this.prevPlayerID += 1\n          }]\n        };\n      });\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n\n    this.handlePlayersHighscore = () => {\n      let playerScores = [];\n      let newHighscore;\n\n      const getMax = (a, b) => Math.max(a, b);\n\n      this.state.players.forEach(function (e) {\n        playerScores.push(e.score);\n        newHighscore = playerScores.reduce(getMax);\n      });\n      console.log(newHighscore);\n    };\n  }\n\n  componentDidUpdate() {\n    this.handlePlayersHighscore();\n  }\n  /*  handlePlayersHighscore = () => {\n     let playerScores = [];  \n     let newHighscore;  \n     const getMax = (a, b) => Math.max(a, b);\n     this.state.players.forEach(function(e) {\n       playerScores.push(e.score)\n       newHighscore = playerScores.reduce(getMax)      \n     })\n      console.log(newHighscore);\n      if (newHighscore > this.state.highscore) {\n       this.setState({\n         highscore: newHighscore\n       })\n     }\n     \n   }  */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        players: this.state.players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), this.state.players.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        playerHighscore: this.handlePlayersHighscore,\n        name: player.name,\n        score: player.score,\n        id: player.id,\n        index: index,\n        changeScore: this.handleChangeScore,\n        removePlayer: this.handleRemovePlayer\n      }, player.id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(AddPlayerForm, {\n        addPlayer: this.handleAddPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/neilmackay/Documents/GitHub2021/react_scoreboard/src/components/App.js"],"names":["React","Component","Header","Player","AddPlayerForm","App","state","players","name","score","id","highscore","prevPlayerID","handleChangeScore","index","numChange","setState","prevState","handleAddPlayer","handleRemovePlayer","filter","p","handlePlayersHighscore","playerScores","newHighscore","getMax","a","b","Math","max","forEach","e","push","reduce","console","log","componentDidUpdate","render","map","player","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport Player from './Player'\nimport AddPlayerForm from './AddPlayerForm'\n  \n\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Neil\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Tiffany\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Ilona\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"Devon\",\n        score: 0,\n        id: 4\n      }\n    ],\n    highscore: 0   \n  };\n\n  \n  //Player id counter\n  prevPlayerID = 4;\n\n  handleChangeScore = (index, numChange) => {\n     this.setState( prevState => ({\n        score: prevState.players[index].score += numChange\n    })); \n  }\n\n  handleAddPlayer = (name) => {\n    this.setState( prevState => {\n      return {\n        players: [\n          ...prevState.players,\n            {\n              name,\n              score: 0,\n              id: this.prevPlayerID += 1\n            }\n        ]\n      }\n    })\n  }\n  \n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n\n\n\ncomponentDidUpdate() {\n    this.handlePlayersHighscore()\n} \n\n /*  handlePlayersHighscore = () => {\n    let playerScores = [];  \n    let newHighscore;  \n    const getMax = (a, b) => Math.max(a, b);\n    this.state.players.forEach(function(e) {\n      playerScores.push(e.score)\n      newHighscore = playerScores.reduce(getMax)      \n    })\n\n    console.log(newHighscore);\n\n    if (newHighscore > this.state.highscore) {\n      this.setState({\n        highscore: newHighscore\n      })\n    }\n    \n  }  */\n\n  handlePlayersHighscore = () => {\n    let playerScores = [];  \n    let newHighscore;  \n    const getMax = (a, b) => Math.max(a, b);\n    this.state.players.forEach(function(e) {\n      playerScores.push(e.score)\n      newHighscore = playerScores.reduce(getMax)      \n    })\n\n    console.log(newHighscore);\n    \n  } \n\n  render() {\n    return (\n      <div className = \"scoreboard\">\n        <Header \n          players = {this.state.players}\n        />\n  \n        {/* Players list */}\n        {this.state.players.map( (player, index) =>\n          <Player \n            playerHighscore = {this.handlePlayersHighscore}\n            name = {player.name}\n            score = {player.score}\n            id = {player.id}\n            index = {index}\n            key = {player.id.toString()} \n            changeScore = {this.handleChangeScore}\n            removePlayer = {this.handleRemovePlayer}           \n          />\n        )}\n\n        <AddPlayerForm \n          addPlayer = {this.handleAddPlayer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}