{"ast":null,"code":"var _jsxFileName = \"/Users/neilmackay/Documents/GitHub2021/react_scoreboard/src/components/Stats.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stats = ({\n  players\n}) => {\n  let totalPlayers = players.length;\n  let totalPoints = players.reduce(function (total, player) {\n    return total + player.score;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"stats\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Players:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: totalPlayers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Total Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: totalPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Stats;\nStats.prototype = {\n  players: PropTypes.arrayOf(PropTypes.shape({\n    score: PropTypes.number\n  }))\n};\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/neilmackay/Documents/GitHub2021/react_scoreboard/src/components/Stats.js"],"names":["React","PropTypes","Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","prototype","arrayOf","shape","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAE/B,MAAIC,YAAY,GAAGD,OAAO,CAACE,MAA3B;AACA,MAAIC,WAAW,GAAGH,OAAO,CAACI,MAAR,CAAe,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;AACrD,WAAOD,KAAK,GAAGC,MAAM,CAACC,KAAtB;AACH,GAFiB,EAEf,CAFe,CAAlB;AAKI,sBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA,2BACA;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtBD;;KAAMJ,K;AAwBNA,KAAK,CAACS,SAAN,GAAkB;AACdR,EAAAA,OAAO,EAAEF,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,KAAV,CAAgB;AACvCH,IAAAA,KAAK,EAAET,SAAS,CAACa;AADsB,GAAhB,CAAlB;AADK,CAAlB;AAMA,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Stats = ({ players }) => {\n\nlet totalPlayers = players.length;\nlet totalPoints = players.reduce(function(total, player) {\n    return total + player.score\n}, 0)\n\n\n    return(\n        <table className=\"stats\">\n        <tbody>\n            <tr>\n                <td>Players:</td>\n                <td>{ totalPlayers }</td>\n            </tr>\n            <tr>\n                <td>Total Points:</td>\n                <td>{ totalPoints }</td>\n            </tr>\n        </tbody>\n        </table>\n    );\n}\n\nStats.prototype = {\n    players: PropTypes.arrayOf(PropTypes.shape({\n        score: PropTypes.number\n    }))\n}\n\nexport default Stats"]},"metadata":{},"sourceType":"module"}